import tensorflow as tf
import cv2
import numpy as np
import matplotlib.pyplot as plt

# 이미지 파일 경로 지정 
image_path = 'path_to_your_image.jpg'  

# MobileNetV2 모델 로드 
model = tf.keras.applications.MobileNetV2(weights='imagenet')

# 클래스 라벨 로드 
decode_predictions = tf.keras.applications.mobilenet_v2.decode_predictions

# 이미지 로드 및 전처리
image = cv2.imread(image_path)
# OpenCV는 BGR 형식으로 읽으므로 RGB로 변환
image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

# 이미지 크기 조정 
image_resized = cv2.resize(image_rgb, (224, 224))

# 모델에 맞게 전처리 
image_preprocessed = tf.keras.applications.mobilenet_v2.preprocess_input(np.expand_dims(image_resized, axis=0))

# 물체 예측
predictions = model.predict(image_preprocessed)

# 예측 결과를 디코딩하여 인간이 이해할 수 있는 형태로 변환
decoded_predictions = decode_predictions(predictions, top=3)[0]

# 결과 출력
print("Top 3 predictions:")
for i, (imagenet_id, label, score) in enumerate(decoded_predictions):
    print(f"{i + 1}: {label} (Confidence: {score:.2f})")

# 이미지 출력 
plt.imshow(image_rgb)
plt.axis('off')  # 축을 숨깁니다
plt.show()
